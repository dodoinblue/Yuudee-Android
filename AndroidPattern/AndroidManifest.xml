<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="android.pattern"
    android:versionCode="1"
    android:versionName="1.0" >

    <uses-sdk
        android:minSdkVersion="14"
        android:targetSdkVersion="19" />

    <permission
        android:name="android.pattern.provider.permission.ACCESS_PROVIDER"
        android:protectionLevel="signature" />

    <uses-permission android:name="android.pattern.provider.permission.ACCESS_PROVIDER" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.MOUNT_UNMOUNT_FILESYSTEMS" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.READ_LOGS" />
    <uses-permission android:name="android.permission.VIBRATE" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.WRITE_SETTINGS" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <uses-permission android:name="android.permission.CALL_PHONE" />
    <uses-permission android:name="android.permission.GET_TASKS" />

    <!--android:name="android.pattern.BaseApplication"
    android:theme="@style/AppTheme"-->
    <application
        android:allowBackup="true"
        android:icon="@drawable/ic_launcher"
        android:label="@string/app_name"
        android:largeHeap="true" >

        <!--
        <provider
            android:name="android.pattern.provider.MessageProvider"
            android:authorities="android.pattern.provider"
            android:label="@string/app_name"
            android:multiprocess="false"
            android:permission="android.pattern.provider.permission.ACCESS_PROVIDER" /> -->

        <service
            android:name="android.pattern.schedule.ScheduledService"
            android:exported="true" >
            <intent-filter>
                <action android:name="android.pattern.action.ACTION_SYNC_BROADCAST" />
            </intent-filter>
        </service>

        <receiver
            android:name="android.pattern.schedule.AlarmExpirationManager$ExpiredAlarmReceiver"
            android:exported="true" >
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
                <action android:name="android.pattern.action.ACTION_ALARM_EXPIRING" />
            </intent-filter>
        </receiver>

        <!-- Umeng begin.
        <meta-data
            android:name="UMENG_APPKEY"
            android:value="533d5cd556240bde19044012" >
        </meta-data>
        <meta-data
            android:name="UMENG_CHANNEL"
            android:value="Umeng" >
        </meta-data>

        <activity
            android:name="com.umeng.update.UpdateDialogActivity"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" >
        </activity>

        <service
            android:name="com.umeng.common.net.DownloadingService"
            android:process=":DownloadingService" >
        </service>
        Umeng end. -->
        
        <!-- Share start -->
        <activity
            android:name="cn.sharesdk.framework.ShareSDKUIShell"
            android:theme="@android:style/Theme.Translucent.NoTitleBar"
            android:configChanges="keyboardHidden|orientation|screenSize"
            android:windowSoftInputMode="stateHidden|adjustResize" >
            <!-- 
                AuthorizeAdapter表示一个继承自cn.sharesdk.framework.authorize.AuthorizeAdapter
                的类，这个类可以监听到页面的生命周期，也可以获取授权页面的各种UI控件。 
                开发者可以通过继承AuthorizeAdapter，重写其方法，并获取各种UI来自定义这个页面的行为。
            -->
            <meta-data android:name="AuthorizeAdapter" android:value="cn.sharesdk.demo.MyAdapter" />
            
            <!-- 
                QZoneWebShareAdapter表示一个继承自cn.sharesdk.tencent.qzone.QZoneWebShareAdapter
                的类，这个类可以监听到页面的生命周期，也可以获QQ空间网页分享权页面的各种UI控件。 
                开发者可以通过继承QZoneWebShareAdapter，重写其方法，并获取各种UI来自定义这个页面的行为。
            -->
            <meta-data android:name="QZoneWebShareAdapter" android:value="cn.sharesdk.demo.MyQZoneWebShareAdapter" />
            
            <!--
                如果集成QQ分享，或者使用QQ客户端来进行QQ空间的分享，须要在此处添加一个对ACTION_VIEW
                事件的过滤器，其中的scheme是“tencent”前缀再开发者应用的加上appId。如果此过滤器不设置，
                则分享结束以后不能得到正确的回调
            -->
            <intent-filter>
                <data android:scheme="tencent100371282" />
                <action android:name="android.intent.action.VIEW" />
                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />
            </intent-filter>
        </activity>
        <!-- 微信分享回调
        <activity
            android:name=".wxapi.WXEntryActivity"
            android:theme="@android:style/Theme.Translucent.NoTitleBar"
            android:configChanges="keyboardHidden|orientation|screenSize"
            android:exported="true" />-->
        <!-- Share end -->
    </application>

</manifest>
